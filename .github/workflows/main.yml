name: Main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'

jobs:
  main:
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        image: [macos-13, ubuntu-22.04, windows-2022]
      fail-fast: false
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - uses: actions/checkout@v4

      - if: matrix.image == 'ubuntu-22.04'
        name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          large-packages: false

      # Common preparation
      - name: Prepare build
        run: ./gradlew prepare

      # Backend
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Build the backend
        run: dotnet build --configuration Release
      - name: Test the backend
        run: dotnet test --configuration Release --no-build --logger trx src/dotnet/Tests
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{ runner.os }}.test-results
          path: "src/dotnet/Tests/TestResults/*.trx"

      # Frontend
      - name: Build the plugin
        run: ./gradlew build

      - if: matrix.image == 'ubuntu-22.04'
        id: version
        name: Determine the version
        shell: pwsh
        run: '"version=$(./scripts/Get-Version.ps1)" >> $env:GITHUB_OUTPUT'

      - name: Unpack distribution # for uploading
        shell: pwsh
        run: scripts/Unpack-Distribution.ps1

      - if: matrix.image == 'ubuntu-22.04'
        name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          name: rider-trx-plugin-${{ steps.version.outputs.version }}
          path: build/distributions/unpacked


  validation:
    runs-on: ubuntu-22.04
    name: "Validate Gradle wrapper"
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/wrapper-validation@v4
